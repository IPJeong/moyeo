1) 플젝 생성
SPRING_mvcBoard_MyBatis : SPRING_mvcBoard 플젝 복사해서 
플젝명 > 마우스오른쪽 > properties > web project setting 선택 후 context명 : member_mybatis로 수정. 

충돌날 때 ) Tomcat v7.0 마우스오른쪽 > ADD AND Remove 선택 > 충돌 소스들 선택 후 remove버튼 누른다.

2) 
	Spring_mvcBoard 소스를 복사한다.
	resources > js, css, images 복사
	views > board > jsp 소스 복사 
	
	js, css, images 경로 수정
 	Setting.jsp 수정
  	<c:set var="project" value="/board_mybatis/resources/" />
 
 3. 패키지(controller, dao, dto, handler) 생성
 	각각 클래스 복사 
 	
  	
 3) 의존설정 : pom.xml에 추가
 	mybatis-spring, spring-jdbc, mybatis 3개 추가
 
 pom.xml에 이거 추가

<!-- mybatis start -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>  
		
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.3.0</version>
		</dependency>  
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.1.4.RELEASE</version>
		</dependency>  	 		
<!-- mybatis end -->
 
 3) 한글 안깨지게 추가 web.xml 설정
 	
 	<!-- 한글 안 깨지게 처리   시작-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		
		
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 한글 안 깨지게 처리   종료-->	
 4) servlet-context.xml에 설정 추가
        경로 : src > main > webapp(기본) > WEB-INF > spring > appServlet
    dataSource, splSessionFactory, sqlSession 추가
    
    --> 커넥션 풀 연결 설정(daoImpl의 dataSource)
     mapper/*.xml : mapper 폴더에서  dao 작성하겠다
    
 5) mapper 패키지, xml 추가 : MemberMapper.xml   
 	프로젝트 오른쪽마우스 > new > Other > xml file > MemberMapper.xml 쓰고 엔터
 	
 	MemberMapper.xml에서
 	코드 설정.
 	<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 복사해서 붙여넣는다.
    
    <!-- 출처 :  http://www.mybatis.org/mybatis-3/configuration.html -->
    http://www.mybatis.org/ > configuration 선택 > 왼쪽 mybatis > 링크 docs > configuration XML > 중간예제 (밑에서부터 올라와서 처음 전체 예제 : objectFactory 바로 위)
  

		
    
   6) Controller 변경
     1) 각 핸들러를 @Autowired 적용
     @Autowired //자동으로 주입
	ConfirmIdHandler confirmIdHandler;
	
	@Autowired 어노테이션 즉, 자동주입기를 사용하면 xml 설정에 <contructor-arg> 태그를 사용하지 않아도
	의존 객체가 자동으로 주입됨.
	
	@Autowired 어노테이션을 이용하면 스프링이 알아서 의존 객체를 찾아서 주입해 준다.
	따라서 xml에서 <contructor-arg ref="" /> 이 문장처럼 설정에 의존객체를 명시하지 않아도 
	필요한 의존 빈 객체를 주입해준다.
	
	2) 핸들러 소스 변경
	@Service("confirmIdHandler") 추가 .. 반드시 참조변수명(즉 소문자로 시작해야)
	@Service 어노테이션을  적용한 클래슨느 비즈니스 로직이 들어가는 Service로 등록이 된다.
	주의) @Autowired를 했으면 반드시 handler에서 @Service를 해야 한다.
	
	
	
	@Autowired
	MemberDAO dao;
	
    3) DAO 변경
    @Repository
	public class MemberDAOImpl implements MemberDAO {
	
		@Autowired
		private SqlSession sqlsession; //servlet-context.xml에 SqlSession 설정을 했기 때문에.
     
	    @Override
		//중복확인 체크
		public int idCheck(String strId) {
		int cnt = 0;
		
		this.sqlsession.selectOne("spring.mvc.member.doa.MemberDAO.idCheck", strId); //인터페이스 기준 //MemberMapper.xml 파일을 호출!! :/MemberMapper.xml에서 DB연결문 작성되어있음
		return cnt;
 7. MemperMapper.xml에
    ;은 붙이지 않는다.     
    
    
    jdbc not found 에러 나는 경우 context.xml에 커넥션풀 추가 해야 함
    